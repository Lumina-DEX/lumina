name: SDK Docs

on:
  pull_request:
    branches: ["main"]
    paths:
      - "packages/sdk/docs/**"
      - "packages/sdk/wrangler.jsonc"

jobs:
  deploy-sdk-docs-preview:
    name: Deploy SDK docs [preview]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      checks: write
      statuses: write
      deployments: write
    outputs:
      url: ${{ steps.deploy-preview-url.outputs.result }} # TODO: Use this for e2e tests.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/install

      - name: Build Docs
        working-directory: packages/sdk
        run: pnpm run docs:build

      - name: Deploy to Cloudflare Workers Site
        id: cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: versions upload
          workingDirectory: packages/sdk
          wranglerVersion: "3.110.0"
          packageManager: pnpm
      - name: Comment on PR
        uses: actions/github-script@v7
        id: deploy-preview-url
        with:
          result-encoding: string
          script: |
            const url = "${{ steps.cloudflare.outputs.deployment-url }}"
            const rawOutput = `${{ steps.cloudflare.outputs.command-output }}`
            const output = rawOutput.replace(/`/g, '\\`').replace(/\$/g, '\\$').replace(/\\/g, '\\\\')
            
            const environment = "preview"
            const deployTitle = "üõ∏ LuminaDex SDK Docs Deploy Preview is live üèåÔ∏è‚Äç‚ôÄÔ∏è"
            const body = 
              `### ${deployTitle}
              #### üåç Deploy URL
              
              [Cloudflare Workers Website preview](${url})

              #### üîç Build Output 

              <details><summary>Output</summary>${output}</details>

              > Deployed by Cloudflare Wrangler Action`
            
            const { repo: { owner, repo }, issue: { number } } = context
            
            // Search for existing comment
            const commentIdentifier = "üõ∏ LuminaDex SDK Docs"
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: number
            })
            
            const botComments = comments.data.filter(comment => {
              return comment.user.type === 'Bot' && comment.body.includes(deployTitle)
            })
            
            // Update existing comment or create a new one
            if (botComments.length > 0) {
              const comment = await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComments[0].id,
                body
              })
              console.log("Updated existing deploy preview comment", comment)
            } else {
              const comment = await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body
              })
              console.log("Created new deploy preview comment", comment)
            }
            return url