name: Deploy CDN Preview

on:
  pull_request:
    branches: ["main"]
    paths:
      - "packages/contracts-cdn/**"
      - ".github/workflows/cdn-preview.yaml"
permissions:
  contents: write
  pull-requests: write
  issues: write
  checks: write
  statuses: write
  deployments: write

jobs:
  deploy-cdn-preview:
    name: Deploy CDN [preview]
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }} # TODO: Use this for e2e tests.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: "moonrepo/setup-toolchain@v0"

      - run: moon contracts-cdn:test

      - run: moon contracts-cdn:build-cache

      - name: Deploy to Cloudflare Workers Static Assets
        id: cloudflare
        uses: ./.github/workflows/actions/deploy-cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        with:
          command: moon contracts-cdn:deploy-preview

      - name: Comment on PR
        uses: actions/github-script@v7
        id: deploy-preview-url
        with:
          result-encoding: string
          script: |
            const url = "${{ steps.cloudflare.outputs.deployment-url }}"
            const rawOutput = `${{ steps.cloudflare.outputs.command-output }}`
            const output = rawOutput.replace(/`/g, '\\`').replace(/\$/g, '\\$').replace(/\\/g, '\\\\')

            const environment = "preview"
            const deployTitle = "üõ∏ LuminaDex CDN Deploy Preview is live üèåÔ∏è‚Äç‚ôÄÔ∏è"
            const body =
              `### ${deployTitle}
              #### üåç Deploy URL

              [Cloudflare Workers API preview](${url})

             > [Preview URLs are not working with workers that use Durable Objects.](https://developers.cloudflare.com/workers/configuration/previews/#limitations)

              #### üîç Build Output

              <details><summary>Output</summary>${output}</details>

              > Deployed by Cloudflare Wrangler Action`

            const { repo: { owner, repo }, issue: { number } } = context

            // Search for existing comment
            const commentIdentifier = "üõ∏ LuminaDex CDN"
            const comments = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: number
            })

            const botComments = comments.data.filter(comment => {
              return comment.user.type === 'Bot' && comment.body.includes(deployTitle)
            })

            // Update existing comment or create a new one
            if (botComments.length > 0) {
              const comment = await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: botComments[0].id,
                body
              })
              console.log("Updated existing deploy preview comment", comment)
            } else {
              const comment = await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body
              })
              console.log("Created new deploy preview comment", comment)
            }
            return url
