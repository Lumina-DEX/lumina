name: Deploy CDN

on:
  push:
    branches: ["main"]
    paths:
      - "packages/contracts-cdn/**"
      - ".github/workflows/cdn.yaml"
  workflow_dispatch:
  workflow_call:

concurrency: wc-${{ github.workflow }}-${{ github.ref }}
permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
  checks: write
  statuses: write
  deployments: write

jobs:
  deploy-cdn:
    name: Deploy CDN
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }} # TODO: Use this for e2e tests.
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🛠️ Setup Moon toolchain
        uses: "moonrepo/setup-toolchain@v0"

      - name: 🧪 Run contracts-cdn tests
        run: moon contracts-cdn:test

      - name: 🗂️ Build contracts-cdn cache
        run: moon contracts-cdn:build-cache

      - name: 🚀 Deploy to Cloudflare Workers Static Assets
        id: cloudflare
        uses: ./.github/workflows/actions/deploy-cloudflare
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        with:
          task: contracts-cdn:deploy

      - name: 💬 Comment on commit
        uses: actions/github-script@v7
        env:
          COMMAND_OUTPUT: ${{ steps.cloudflare.outputs.command-output }}
        with:
          result-encoding: string
          script: |
            const url = "${{ steps.cloudflare.outputs.deployment-url }}"
            const rawOutput = `${{ steps.cloudflare.outputs.command-output }}`
            const output = process.env.COMMAND_OUTPUT
            const body =
            `### 🛸 LuminaDex CDN is live 🏌️‍♀️
            #### 🌍 Deploy URL

            [Cloudflare Workers API preview](${url})

            #### 🔍 Build Output

            <details><summary>Output</summary>${output}</details>

            > Deployed by Cloudflare Wrangler Action`
            const { sha, repo: { owner , repo }} = context
            const commitComment = await github.rest.repos.createCommitComment({ commit_sha: sha, owner, repo, body })
            console.log({ commitComment })
