name: Deploy CDN

on:
  push:
    branches: ["main"]
    paths:
    - "packages/contracts-cdn/**"
  workflow_dispatch:
  workflow_call:

concurrency: wc-${{ github.workflow }}-${{ github.ref }}
permissions:
  id-token: write
  contents: write
  pull-requests: write
  issues: write
  checks: write
  statuses: write
  deployments: write

jobs:
  deploy-cdn:
    name: Deploy CDN
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }} # TODO: Use this for e2e tests.
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/workflows/actions/install

      - name: Build contracts
        working-directory: packages/contracts
        run: bun run build

      - name: Build sdk
        working-directory: packages/sdk
        run: bun run build

      - name: Build cache
        working-directory: packages/contracts-cdn
        run: bun run cache:create

      - name: Deploy to Cloudflare Workers Static Assets
        id: cloudflare
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: deploy
          workingDirectory: packages/contracts-cdn
          wranglerVersion: "4"
          packageManager: pnpm

      - name: Comment on commit
        uses: actions/github-script@v7
        with:
            result-encoding: string
            script: |
                const url = "${{ steps.cloudflare.outputs.deployment-url }}"
                const rawOutput = `${{ steps.cloudflare.outputs.command-output }}`
                const output = rawOutput.replace(/`/g, '\\`').replace(/\$/g, '\\$').replace(/\\/g, '\\\\')
                const body = 
                `### üõ∏ LuminaDex CDN is live üèåÔ∏è‚Äç‚ôÄÔ∏è
                #### üåç Deploy URL
                
                [Cloudflare Workers API preview](${url})

                #### üîç Build Output 

                <details><summary>Output</summary>${output}</details>

                > Deployed by Cloudflare Wrangler Action`                 
                const { sha, repo: { owner , repo }} = context
                const commitComment = await github.rest.repos.createCommitComment({ commit_sha: sha, owner, repo, body })
                console.log({ commitComment })